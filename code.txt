import random
import string
import pandas as pd
import csv
import matplotlib.pyplot as plt
from sympy import symbols, diff

train_path="D:/qianx/model_data/house price forecast/train.csv"
feature_num=3

#loss值的list
loss_list=[]

#读取训练集
def ReadTrain(train_path):
    data=[]
    with open(train_path,encoding='UTF-8') as file:
        reader = csv.reader(file)
        n=0
        for line in reader:
            if n==0:
                n=1
            else:
                data.append([1,eval(line[0]),eval(line[1]),eval(line[2])])
    return data
    
#求均方差损失值
def ms_loss(w,data):
    TotalError=0
    for i in range(len(data[0])-1):
        temp=0
        for j in range(feature_num):
            temp+=w[j]*data[i][j]
        TotalError+=(data[i][3]-temp)**2
    return TotalError

#更新参数
def gradient_update(w,data,lr):
    w_gradient=[0.0,0.0,0.0]
    size = float(len(data))
    for i in range(len(data[0])-1):
        w_gradient[0]+=(2 / size) * ((w[0]+w[1] * data[i][1] + w[2]*data[i][2]) - data[i][3])
        w_gradient[1]+=(2 / size) * data[i][1]*((w[0]+w[1] * data[i][1] + w[2]*data[i][2]) - data[i][3])
        w_gradient[2]+=(2 / size) * data[i][2]*((w[0]+w[1] * data[i][1] + w[2]*data[i][2]) - data[i][3])
    for i in range(feature_num):
        w[i]=w[i]-lr*w_gradient[i]
    return w

#梯度下降法
def gradient_descent(data,w,lr,epoch):
    for num in range(epoch):
        w=gradient_update(w,data,lr)
        loss=ms_loss(w,data)
        loss_list.append(loss)
        print('iteration:[%s]  loss:[%s]  w:[%s]'%(num,loss,w))
    return w

def main():
    data=ReadTrain(train_path)
    lr=0.1
    w=[0.0,0.0,0.0]
    for i in range(feature_num):
        w[i]=random.uniform(1,2)
    epoch=100
    w=gradient_descent(data,w,lr,epoch)
    loss=ms_loss(w,data)
    print('Final loss:[%s]  w:[%s]'%(loss,w))
    #绘制损失函数随训练次数变化
    plt.title("Loss Function")
    plt.plot(np.arange(0,100), loss_list)
    plt.xlabel('Interation')
    plt.ylabel('Loss Value')
    plt.show()

main()